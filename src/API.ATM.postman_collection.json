{
	"info": {
		"_postman_id": "7ee58a16-ec38-497f-9dd4-cf30c67f205a",
		"name": "API.ATM Mejorada",
		"description": "Colección de Postman para probar la API del sistema de cajero (ATM) con mejoras en variables, scripts de prueba y autenticación JWT.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33068027",
		"_collection_link": "https://red-crescent-875327.postman.co/workspace/32a71580-0ff8-4fba-8831-c9e955ac9819/collection/33068027-7ee58a16-ec38-497f-9dd4-cf30c67f205a?action=share&source=collection_link&creator=33068027"
	},
	"item": [
		{
			"name": "Autenticación",
			"item": [
				{
					"name": "1. Login (Obtener Token JWT)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Login successful and token received\", function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData.success).to.be.true;",
									"    pm.expect(responseData.message).to.eql(\"Operation successful\");",
									"    pm.expect(responseData).to.have.property('data'); // 'data' contendrá el token",
									"    pm.expect(responseData.data).to.be.a('string');",
									"",
									"    // Guarda el token en una variable de colección para usarlo en otras peticiones",
									"    pm.collectionVariables.set(\"token\", responseData.data);",
									"    console.log(\"JWT Token set:\", pm.collectionVariables.get(\"token\"));",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cardNumber\": \"{{customerCardNumber}}\",\n  \"pin\": \"{{customerPin}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Operaciones de Cuenta",
			"item": [
				{
					"name": "2. Cambiar PIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const responseData = pm.response.json();",
									"",
									"if (responseData.success) {",
									"    pm.test(\"PIN changed successfully\", function () {",
									"        pm.expect(responseData.success).to.be.true;",
									"        pm.expect(responseData.message).to.eql(\"PIN changed successfully.\");",
									"        // Actualiza el PIN en la variable de colección para futuras pruebas",
									"        pm.collectionVariables.set(\"customerPin\", pm.collectionVariables.get(\"newCustomerPin\"));",
									"        console.log(\"Customer PIN updated to:\", pm.collectionVariables.get(\"customerPin\"));",
									"    });",
									"} else {",
									"    pm.test(\"PIN change failed as expected\", function () {",
									"        pm.expect(responseData.success).to.be.false;",
									"        pm.expect(responseData.errorCode).to.be.a('number');",
									"        console.log(\"PIN Change Error:\", responseData.message, \"Code:\", responseData.errorCode);",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oldPin\": \"{{customerPin}}\",\n  \"newPin\": \"{{newCustomerPin}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ChangePin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ChangePin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transacciones",
			"item": [
				{
					"name": "3. Retirar Fondos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const responseData = pm.response.json();",
									"",
									"if (responseData.success) {",
									"    pm.test(\"Withdrawal successful\", function () {",
									"        pm.expect(responseData.success).to.be.true;",
									"        pm.expect(responseData.message).to.eql(\"Withdrawal successful.\");",
									"        pm.expect(responseData.data).to.be.a('number'); // Nuevo balance",
									"        console.log(\"New Balance after withdrawal:\", responseData.data);",
									"    });",
									"} else {",
									"    pm.test(\"Withdrawal failed as expected\", function () {",
									"        pm.expect(responseData.success).to.be.false;",
									"        pm.expect(responseData.errorCode).to.be.a('number');",
									"        console.log(\"Withdrawal Error:\", responseData.message, \"Code:\", responseData.errorCode);",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 100.00\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Transactions/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Transactions",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Depositar Fondos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const responseData = pm.response.json();",
									"",
									"if (responseData.success) {",
									"    pm.test(\"Deposit successful\", function () {",
									"        pm.expect(responseData.success).to.be.true;",
									"        pm.expect(responseData.message).to.eql(\"Deposit successful.\");",
									"        pm.expect(responseData.data).to.be.a('number'); // Nuevo balance",
									"        console.log(\"New Balance after deposit:\", responseData.data);",
									"    });",
									"} else {",
									"    pm.test(\"Deposit failed as expected\", function () {",
									"        pm.expect(responseData.success).to.be.false;",
									"        pm.expect(responseData.errorCode).to.be.a('number');",
									"        console.log(\"Deposit Error:\", responseData.message, \"Code:\", responseData.errorCode);",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 500.00\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Transactions/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Transactions",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Consultar Saldo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const responseData = pm.response.json();",
									"",
									"if (responseData.success) {",
									"    pm.test(\"Balance retrieved successfully\", function () {",
									"        pm.expect(responseData.success).to.be.true;",
									"        pm.expect(responseData.message).to.eql(\"Balance retrieved successfully.\");",
									"        pm.expect(responseData.data).to.be.a('number'); // Balance actual",
									"        console.log(\"Current Balance:\", responseData.data);",
									"    });",
									"} else {",
									"    pm.test(\"Balance inquiry failed as expected\", function () {",
									"        pm.expect(responseData.success).to.be.false;",
									"        pm.expect(responseData.errorCode).to.be.a('number');",
									"        console.log(\"Balance Inquiry Error:\", responseData.message, \"Code:\", responseData.errorCode);",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Transactions/balance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Transactions",
								"balance"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// Este script pre-request a nivel de colección puede ser usado para lógica global,",
					"// como refrescar el token si está a punto de expirar.",
					"// Por ahora, el login se maneja en la primera petición y establece el token.",
					"// Si necesitas un token fresco para cada ejecución de la colección, podrías poner aquí",
					"// una llamada a pm.sendRequest para el login si el token no existe o está expirado."
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:7240",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "customerCardNumber",
			"value": "1397017288273011",
			"type": "string"
		},
		{
			"key": "customerPin",
			"value": "1234",
			"type": "string"
		},
		{
			"key": "newCustomerPin",
			"value": "4321",
			"type": "string"
		},
		{
			"key": "customerAccountNumber",
			"value": "ACC004",
			"type": "string"
		}
	]
}